package elastic_file_indexer.indexer;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.attribute.BasicFileAttributes;

import org.elasticsearch.client.RestHighLevelClient;

import elastic_file_indexer.helper.FileCrawler;
import elastic_file_indexer.rest_client.RestClientFactory;

public class Indexer {
	
	private RestHighLevelClient client;
	
	public Indexer() {
		 this.client = RestClientFactory.createRestClient();
	}
	
	public void indexFilesInPath(String path) {
		File dir = new File(path);
		FileCrawler.dirTree(dir).forEach(file -> addFile(file));
	}
	
	private void addFile(File file) {
		String absolutePath = file.getAbsolutePath();
		BasicFileAttributes attr = null;
		try {
			attr = Files.readAttributes(file.toPath(), BasicFileAttributes.class);
			System.out.println("creationTime: " + attr.creationTime());
			System.out.println("lastAccessTime: " + attr.lastAccessTime());
			System.out.println("lastModifiedTime: " + attr.lastModifiedTime());

			System.out.println("isDirectory: " + attr.isDirectory());
			System.out.println("isOther: " + attr.isOther());
			System.out.println("isRegularFile: " + attr.isRegularFile());
			System.out.println("isSymbolicLink: " + attr.isSymbolicLink());
			System.out.println("size: " + attr.size());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("##################################################");
	}
	
	 protected void finalize() 
	  {
			try {
				client.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	  }
}
