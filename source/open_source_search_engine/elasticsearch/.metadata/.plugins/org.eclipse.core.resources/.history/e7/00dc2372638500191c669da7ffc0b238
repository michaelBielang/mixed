package elastic_file_indexer.cli;

import java.util.List;
import java.util.Scanner;

import elastic_file_indexer.document.Document;
import elastic_file_indexer.worker.Indexer;
import elastic_file_indexer.worker.QueryWorker;

public class IndexerCLI {

	public static void main(String[] args) {
		boolean continue = true;
		System.out.println("Hallo, hier kannst du dein Dateisystem indexieren und später durchsuchen. "
				+ "Dafür bitte einen Elasticsearch Server auf dem Standartport 9200 gestartet haben.");
		do {
			Scanner scanned = new Scanner(System.in);
			System.out.println("Was möchtest du machen? q - Query, i - Index, c - close");
			String option = scanned.nextLine();
			
			switch option 
			System.out.println(
					"Aus welchem Pfad sollen die Dateien Indexiert werden? (x um diesen Schritt zu überspringen.)");
			
			String path = scanned.nextLine();
			if (!path.equals("x")) {
				Indexer indexer = new Indexer();
				System.out.println("Indexierung wird gestartet.");
				int fileCount = indexer.indexFilesInPath(path);
				System.out.println(fileCount + " Files wurden indexiert");
			}
	
			QueryWorker queryWorker = new QueryWorker();
			System.out.println("ClusterStatus: " + queryWorker.clusterInfo());
			System.out.println("###################################################");
			System.out.println("All indexed Files: ");
			queryWorker.queryAllDocuments().forEach(doc -> System.out.println(doc));
	
			
				System.out.println("Mit welcher Query mächtest du suchen:");
				String query = scanned.nextLine();
				continueQueries = !query.equals("q");
				if (continueQueries) {
					List<Document> hits = queryWorker.querySpecific(query);
					hits.size()>0 ? hits.forEach(doc -> System.out.println(doc)) : System.out.println("No Hits.");
				}
			
		}while(true);
		scanned.close();
		System.exit(0);
	}

}
