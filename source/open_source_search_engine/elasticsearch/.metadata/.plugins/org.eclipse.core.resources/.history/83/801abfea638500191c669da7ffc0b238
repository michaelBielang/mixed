package elastic_file_indexer.cli;

import java.util.List;
import java.util.Scanner;

import elastic_file_indexer.document.Document;
import elastic_file_indexer.worker.Indexer;
import elastic_file_indexer.worker.QueryWorker;

public class IndexerCLI {

	public static void main(String[] args) {
		boolean continueFlow = true;
		QueryWorker queryWorker = new QueryWorker();
		Indexer indexer = new Indexer();
		Scanner scanned = new Scanner(System.in);
		System.out.println("Hallo, hier kannst du dein Dateisystem indexieren und später durchsuchen. "
				+ "Dafür bitte einen Elasticsearch Server auf dem Standartport 9200 gestartet haben.");
		do {
			System.out.println("Was möchtest du machen? i - Index, q - Query, s - status, c - close");
			String option = scanned.nextLine();
			
			switch (option) {
				case "i":
					System.out.println(
							"Aus welchem Pfad sollen die Dateien Indexiert werden?");
					String path = scanned.nextLine();
					
					
					System.out.println("Indexierung wird gestartet.");
					int fileCount = indexer.indexFilesInPath(path);
					System.out.println(fileCount + " Files wurden indexiert");
					break;
				case "q":
					
					break;
				case "s":
					System.out.println("ClusterStatus: " + queryWorker.clusterInfo());
					break;
				case "c":
					continueFlow = false;
			}
			
		

			
			
			
			System.out.println("All indexed Files: ");
			queryWorker.queryAllDocuments().forEach(doc -> System.out.println(doc));
	
			
				System.out.println("Mit welcher Query mächtest du suchen:");
				String query = scanned.nextLine();
				continueQueries = !query.equals("q");
				if (continueQueries) {
					List<Document> hits = queryWorker.querySpecific(query);
					hits.size()>0 ? hits.forEach(doc -> System.out.println(doc)) : System.out.println("No Hits.");
				}
			
		}while(true);
		scanned.close();
		System.exit(0);
	}

}
